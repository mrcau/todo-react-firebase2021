[{"C:\\Users\\User\\Desktop\\Coding\\test\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Coding\\test\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Coding\\test\\src\\firebase.js":"3","C:\\Users\\User\\Desktop\\Coding\\test\\src\\LoginModal.jsx":"4","C:\\Users\\User\\Desktop\\Coding\\test\\src\\Itemrow.jsx":"5"},{"size":440,"mtime":1610347467409,"results":"6","hashOfConfig":"7"},{"size":2791,"mtime":1610493868794,"results":"8","hashOfConfig":"7"},{"size":2123,"mtime":1610492087468,"results":"9","hashOfConfig":"7"},{"size":4460,"mtime":1610440413122,"results":"10","hashOfConfig":"7"},{"size":533,"mtime":1610493920301,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1w13wtb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\Coding\\test\\src\\index.js",[],["24","25"],"C:\\Users\\User\\Desktop\\Coding\\test\\src\\App.js",["26","27","28"],"C:\\Users\\User\\Desktop\\Coding\\test\\src\\firebase.js",[],"C:\\Users\\User\\Desktop\\Coding\\test\\src\\LoginModal.jsx",["29"],"import React, { useRef, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nfunction LoginModal({ fireApp, setUserName, setLoginModal,firebase }) {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const emailRegisterRef = useRef();\r\n  const nameRegisterRef = useRef();\r\n  const passRegisterRef = useRef();\r\n  const repassRegisterRef = useRef();\r\n  const [registerTF, setRegisterTF] = useState(false);\r\n\r\n  // 이메일로그인\r\n  const emailLogin = (e) => {\r\n    e.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const pass = passRef.current.value;\r\n    fireApp.emailLogin(email,pass)\r\n    //   .then((user) => {\r\n    //     console.log('success');\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     var errorMessage = error.message;\r\n    //     console.log(errorMessage);\r\n    //   });\r\n    // console.log(email,pass);\r\n  }\r\n\r\n  // 구글로그인\r\n  const googleLogin = async () => {\r\n    await fireApp.login();\r\n    setLoginModal(false)\r\n  }\r\n\r\n  // 회원가입\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const registerInfo = {\r\n      name : nameRegisterRef.current.value,\r\n      email : emailRegisterRef.current.value, \r\n      pass : passRegisterRef.current.value\r\n    }\r\n    const cf = {displayName : ()=>setUserName(registerInfo.name), \r\n                closeModal : ()=>setLoginModal(false)}\r\n   fireApp.createUser(registerInfo,cf)\r\n}\r\n\r\n  return (\r\n    <div className=\"loginModal\">\r\n      {/* LoginModal */}\r\n      {!registerTF &&\r\n        <div className=\"auth\">\r\n        <h4>로그인</h4>\r\n          <Form onSubmit={emailLogin}>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"formGroup\" >\r\n              <Form.Label className=\"formLabel\"><i className=\"far fa-envelope\" /></Form.Label>\r\n              <Form.Control className=\"formInput\" type=\"email\" ref={emailRef} placeholder=\"이메일\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"formGroup\" >\r\n              <Form.Label className=\"formLabel\"><i className=\"fas fa-unlock-alt\" /></Form.Label>\r\n              <Form.Control className=\"formInput\" type=\"password\" ref={passRef} placeholder=\"패스워드\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\"> 로그인</Button>\r\n          </Form>          \r\n          <button className=\"btnGoogle\" style={{background:\"white\"}} onClick={googleLogin} >\r\n          <i className=\"fab fa-google-plus\"/></button>\r\n          <button className=\"btnRegister\" style={{background:\"white\"}} onClick={() => setRegisterTF(true)} >\r\n          아이디가 없다면...</button>\r\n        </div>\r\n      }\r\n\r\n      {/* Register */}\r\n      <div className=\"auth\" style={{ display: !registerTF && 'none' }}>\r\n      <h4>회원가입</h4>\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><i className=\"far fa-smile\" /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"text\" ref={nameRegisterRef} placeholder=\"이름\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><i className=\"far fa-envelope\" /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"email\" ref={emailRegisterRef} placeholder=\"이메일\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><i className=\"fas fa-unlock-alt\" /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"password\"ref={passRegisterRef} placeholder=\"패스워드\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\" className=\"formGroup\" >\r\n            <Form.Label className=\"formLabel\"><i className=\"fas fa-unlock-alt\" /></Form.Label>\r\n            <Form.Control className=\"formInput\" type=\"password\"ref={repassRegisterRef} placeholder=\"패스워드 확인\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n\r\n      {/* 닫기 */}\r\n      <button className=\"close\" onClick={() => setLoginModal(false)}>\r\n        <i className=\"far fa-window-close\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginModal;","C:\\Users\\User\\Desktop\\Coding\\test\\src\\Itemrow.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":17,"column":10,"nodeType":"36","messageId":"37","endLine":17,"endColumn":19},{"ruleId":"34","severity":1,"message":"38","line":18,"column":9,"nodeType":"36","messageId":"37","endLine":18,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":35,"column":6,"nodeType":"41","endLine":35,"endColumn":8,"suggestions":"42"},{"ruleId":"34","severity":1,"message":"43","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":17},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'todoCount' is assigned a value but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fireApp'. Either include it or remove the dependency array.","ArrayExpression",["46"],"'useForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [fireApp]",{"range":"49","text":"50"},[1024,1026],"[fireApp]"]